import type { MessageProp } from "@/components/message/message.tsx";
import type { TextMessage as TextMessageVM } from "@/lib/schema.ts";
import { cn } from "@/lib/utils.ts";
import React from "react";

interface TextMessageProps extends MessageProp<TextMessageVM> {
  variant: "default" | "referenced";
}

export type TextMessageEntity = string;

const wcEmojiKeys = [
  "微笑",
  "微笑",
  "Smile",
  "ยม",
  "撇嘴",
  "撇嘴",
  "Grimace",
  "หนาบด",
  "色",
  "色",
  "Drool",
  "นลายไหล",
  "发呆",
  "發呆",
  "Scowl",
  "หนาบง",
  "得意",
  "得意",
  "CoolGuy",
  "สบาย",
  "流泪",
  "流淚",
  "Sob",
  "รองไหโฮ",
  "害羞",
  "害羞",
  "Shy",
  "อาย",
  "闭嘴",
  "閉嘴",
  "Silent",
  "หามพด",
  "睡",
  "睡",
  "Sleep",
  "หลบ",
  "大哭",
  "大哭",
  "Cry",
  "รองไห",
  "尴尬",
  "尷尬",
  "Awkward",
  "ลบากใจ",
  "发怒",
  "發怒",
  "Angry",
  "โกรธสด",
  "吐舌",
  "调皮",
  "調皮",
  "Tongue",
  "ขยบตา",
  "呲牙",
  "呲牙",
  "Grin",
  "ยมกวาง",
  "惊讶",
  "驚訝",
  "Surprise",
  "ประหลาดใจ",
  "难过",
  "難過",
  "Frown",
  "เสยใจ",
  "酷",
  "酷",
  "Ruthless",
  "เจง",
  "囧",
  "囧",
  "Blush",
  "Blush",
  "抓狂",
  "抓狂",
  "Scream",
  "กรดรอง",
  "吐",
  "吐",
  "Puke",
  "อาเจยน",
  "偷笑",
  "偷笑",
  "Chuckle",
  "หวเราะหๆ",
  "愉快",
  "愉快",
  "Joyful",
  "พอใจ",
  "白眼",
  "白眼",
  "Slight",
  "สงสย",
  "傲慢",
  "傲慢",
  "Smug",
  "หยง",
  "饥饿",
  "饑餓",
  "Hungry",
  "หว",
  "困",
  "累",
  "Drowsy",
  "งวงนอน",
  "惊恐",
  "驚恐",
  "Panic",
  "ตกใจกลว",
  "流汗",
  "流汗",
  "Sweat",
  "เหงอตก",
  "憨笑",
  "大笑",
  "Laugh",
  "หวเราะ",
  "悠闲",
  "悠閑",
  "Commando",
  "ทหาร",
  "奋斗",
  "奮鬥",
  "Determined",
  "มงมน",
  "咒骂",
  "咒罵",
  "Scold",
  "ดาวาา",
  "疑问",
  "疑問",
  "Shocked",
  "สบสน",
  "嘘",
  "噓",
  "Shhh",
  "จๆ",
  "晕",
  "暈",
  "Dizzy",
  "เวยนหว",
  "疯了",
  "瘋了",
  "Tormented",
  "ทอแท",
  "衰",
  "衰",
  "Toasted",
  "ชวราย",
  "骷髅",
  "骷髏頭",
  "Skull",
  "หวกะโหลก",
  "敲打",
  "敲打",
  "Hammer",
  "คอนทบ",
  "再见",
  "再見",
  "Wave",
  "บายๆ",
  "擦汗",
  "擦汗",
  "Speechless",
  "เชดเหงอ",
  "抠鼻",
  "摳鼻",
  "NosePick",
  "แคะจมก",
  "鼓掌",
  "鼓掌",
  "Clap",
  "ตบมอ",
  "糗大了",
  "羞辱",
  "Shame",
  "อบอาย",
  "坏笑",
  "壞笑",
  "Trick",
  "กลโกง",
  "左哼哼",
  "左哼哼",
  "Bah！L",
  "เชดซาย",
  "右哼哼",
  "右哼哼",
  "Bah！R",
  "เชดขวา",
  "哈欠",
  "哈欠",
  "Yawn",
  "หาว",
  "鄙视",
  "鄙視",
  "Pooh-pooh",
  "ดถก",
  "委屈",
  "委屈",
  "Shrunken",
  "ของใจ",
  "快哭了",
  "快哭了",
  "TearingUp",
  "เกอบรองไห",
  "阴险",
  "陰險",
  "Sly",
  "ขโกง",
  "亲亲",
  "親親",
  "Kiss",
  "จบ",
  "吓",
  "嚇",
  "Wrath",
  "หา",
  "可怜",
  "可憐",
  "Whimper",
  "นาสงสาร",
  "菜刀",
  "菜刀",
  "Cleaver",
  "มด",
  "西瓜",
  "西瓜",
  "Watermelon",
  "แตงโม",
  "啤酒",
  "啤酒",
  "Beer",
  "เบยร",
  "篮球",
  "籃球",
  "Basketball",
  "บาสเกตบอล",
  "乒乓",
  "乒乓",
  "PingPong",
  "ปงปอง",
  "咖啡",
  "咖啡",
  "Coffee",
  "กาแฟ",
  "饭",
  "飯",
  "Rice",
  "ขาว",
  "猪头",
  "豬頭",
  "Pig",
  "หม",
  "玫瑰",
  "玫瑰",
  "Rose",
  "กหลาบ",
  "凋谢",
  "枯萎",
  "Wilt",
  "รวงโรย",
  "嘴唇",
  "嘴唇",
  "Lips",
  "รมฝปาก",
  "爱心",
  "愛心",
  "Heart",
  "หวใจ",
  "心碎",
  "心碎",
  "BrokenHeart",
  "ใจสลาย",
  "蛋糕",
  "蛋糕",
  "Cake",
  "เคก",
  "闪电",
  "閃電",
  "Lightning",
  "ฟาผา",
  "炸弹",
  "炸彈",
  "Bomb",
  "ระเบด",
  "刀",
  "刀",
  "Dagger",
  "ดาบ",
  "足球",
  "足球",
  "Soccer",
  "ฟตบอล",
  "瓢虫",
  "甲蟲",
  "Ladybug",
  "เตาทอง",
  "便便",
  "便便",
  "Poop",
  "อจจาระ",
  "月亮",
  "月亮",
  "Moon",
  "พระจนทร",
  "太阳",
  "太陽",
  "Sun",
  "พระอาทตย",
  "礼物",
  "禮物",
  "礼物",
  "Gift",
  "拥抱",
  "擁抱",
  "Hug",
  "กอด",
  "强",
  "強",
  "ThumbsUp",
  "ยอดเยยม",
  "弱",
  "弱",
  "ThumbsDown",
  "ยอดแย",
  "握手",
  "握手",
  "Shake",
  "จบมอ",
  "胜利",
  "勝利",
  "Peace",
  "สตาย",
  "抱拳",
  "抱拳",
  "Fight",
  "คารวะ",
  "勾引",
  "勾引",
  "Beckon",
  "เขามา",
  "拳头",
  "拳頭",
  "Fist",
  "กหมด",
  "差劲",
  "差勁",
  "Pinky",
  "ดกน",
  "爱你",
  "愛你",
  "RockOn",
  "ฉนรกคณ",
  "NO",
  "NO",
  "Nuh-uh",
  "ไม",
  "OK",
  "OK",
  "OK",
  "ตกลง",
  "爱情",
  "愛情",
  "InLove",
  "รกกน",
  "飞吻",
  "飛吻",
  "Blowkiss",
  "มรก",
  "跳跳",
  "跳跳",
  "Waddle",
  "กระโดด",
  "发抖",
  "發抖",
  "Tremble",
  "เขยา",
  "怄火",
  "噴火",
  "Aaagh!",
  "อากส!",
  "转圈",
  "轉圈",
  "Twirl",
  "หมนตว",
  "磕头",
  "磕頭",
  "Kotow",
  "คนบ",
  "回头",
  "回頭",
  "Dramatic",
  "เหลยวหลง",
  "跳绳",
  "跳繩",
  "JumpRope",
  "กระโดด",
  "投降",
  "投降",
  "Surrender",
  "ยอมแพ",
  "激动",
  "激動",
  "Hooray",
  "ไชโย",
  "乱舞",
  "亂舞",
  "Meditate",
  "เยเย",
  "献吻",
  "獻吻",
  "Smooch",
  "จบ",
  "左太极",
  "左太極",
  "TaiChi L",
  "หญงตอส",
  "右太极",
  "右太極",
  "TaiChi R",
  "ชายตอส",
  "Smirk",
  "奸笑",
  "奸笑",
  "Smirk",
  "奸笑",
  "Smirk",
  "Hey",
  "嘿哈",
  "嘿哈",
  "Hey",
  "吼嘿",
  "Hey",
  "Facepalm",
  "捂脸",
  "捂脸",
  "Facepalm",
  "掩面",
  "Facepalm",
  "Smart",
  "机智",
  "机智",
  "Smart",
  "機智",
  "Smart",
  "Tea",
  "茶",
  "茶",
  "Tea",
  "茶",
  "Tea",
  "Packet",
  "红包",
  "红包",
  "Packet",
  "Packet",
  "Packet",
  "Candle",
  "蜡烛",
  "蜡烛",
  "Candle",
  "蠟燭",
  "Candle",
  "Yeah!",
  "耶",
  "耶",
  "Yeah!",
  "歐耶",
  "Yeah!",
  "Concerned",
  "皱眉",
  "皱眉",
  "Concerned",
  "皺眉",
  "Concerned",
  "Salute",
  "抱拳",
  "抱拳",
  "Salute",
  "抱拳",
  "Salute",
  "Chick",
  "鸡",
  "鸡",
  "Chick",
  "小雞",
  "Chick",
  "Blessing",
  "福",
  "福",
  "Blessing",
  "福",
  "Blessing",
  "Bye",
  "再见",
  "再见",
  "Bye",
  "再見",
  "Bye",
  "Rich",
  "發",
  "發",
  "Rich",
  "發",
  "Rich",
  "Pup",
  "小狗",
  "小狗",
  "Pup",
  "小狗",
  "Pup",
  "Onlooker",
  "吃瓜",
  "吃瓜",
  "Onlooker",
  "吃西瓜",
  "Onlooker",
  "GoForIt",
  "加油",
  "加油",
  "GoForIt",
  "加油",
  "GoForIt",
  "Sweats",
  "汗",
  "汗",
  "Sweats",
  "汗",
  "Sweats",
  "OMG",
  "天啊",
  "天啊",
  "OMG",
  "天啊",
  "OMG",
  "Emm",
  "Emm",
  "Emm",
  "Emm",
  "一言難盡",
  "Emm",
  "Respect",
  "社会社会",
  "社会社会",
  "Respect",
  "失敬失敬",
  "Respect",
  "Doge",
  "旺柴",
  "旺柴",
  "Doge",
  "旺柴",
  "Doge",
  "NoProb",
  "好的",
  "好的",
  "NoProb",
  "好的",
  "NoProb",
  "MyBad",
  "打脸",
  "打脸",
  "MyBad",
  "打臉",
  "MyBad",
  "Wow",
  "哇",
  "哇",
  "Wow",
  "哇",
  "Wow",
  "KeepFighting",
  "加油加油",
  "加油加油",
  "KeepFighting",
  "加油！",
  "KeepFighting",
  "Boring",
  "翻白眼",
  "翻白眼",
  "Boring",
  "翻白眼",
  "Boring",
  "666",
  "666",
  "666",
  "Awesome",
  "666",
  "Awesome",
  "LetMeSee",
  "让我看看",
  "让我看看",
  "LetMeSee",
  "讓我看看",
  "LetMeSee",
  "Sigh",
  "叹气",
  "叹气",
  "Sigh",
  "嘆息",
  "Sigh",
  "Hurt",
  "苦涩",
  "苦涩",
  "Hurt",
  "難受",
  "Hurt",
  "Broken",
  "裂开",
  "裂开",
  "Broken",
  "崩潰",
  "Broken",
  "Flushed",
  "脸红",
  "脸红",
  "Flushed",
  "臉紅",
  "Flushed",
  "Happy",
  "笑脸",
  "笑脸",
  "Happy",
  "笑臉",
  "Happy",
  "Lol",
  "破涕为笑",
  "破涕为笑",
  "Lol",
  "破涕為笑",
  "Lol",
  "Fireworks",
  "烟花",
  "烟花",
  "Fireworks",
  "煙花",
  "Fireworks",
  "Firecracker",
  "爆竹",
  "爆竹",
  "Firecracker",
  "爆竹",
  "Firecracker",
  "Party",
  "庆祝",
  "庆祝",
  "Party",
  "慶祝",
  "Party",
  "Terror",
  "恐惧",
  "恐惧",
  "Terror",
  "恐懼",
  "Terror",
  "Duh",
  "无语",
  "无语",
  "Duh",
  "無語",
  "Duh",
  "LetDown",
  "失望",
  "失望",
  "Let Down",
  "失望",
  "Let Down",
  "Sick",
  "生病",
  "生病",
  "Sick",
  "生病",
  "Sick",
  "Worship",
  "合十",
  "合十",
  "Worship",
  "合十",
  "Worship",
];

const textMessageVariants = {
  default: "",
  referenced: "text-sm",
};

export default function TextMessage({
  message,
  variant = "default",
  direction,
  showUsername,

  ...props
}: TextMessageProps) {
  if (variant === "default") {
    const paragraphs = message.message_entity.split("\n").map((p) =>
      p
        .split(/[\[\]]/)
        .filter((s) => s.length)
        .map((s, index) =>
          wcEmojiKeys.indexOf(s) > -1 ? (
            // <img
            //   key={index}
            //   title={s}
            //   className={"inline bg-red-200"}
            //   alt={""}
            // />
            <span>[{s}]</span>
          ) : (
            <React.Fragment key={index}>{s}</React.Fragment>
          ),
        ),
    );

    return (
      <div
        className={cn(
          "py-2.5 px-3 w-fit max-w-[20em] rounded-lg",
          ["bg-[#95EB69]", "bg-white"][direction],
          "leading-normal tracking-[-.022em] break-words text-pretty",
          textMessageVariants[variant],
        )}
        {...props}
      >
        {showUsername && message.from && (
          <div className={"mb-[0.25em] text-sm text-neutral-400"}>
            <small className={"[font-size:inherit]"}>
              {message.from.remark ?? message.from.username}
            </small>
          </div>
        )}
        <div className="space-y-[1lh]">
          {paragraphs.map((p, index) => (
            <p key={`${index}`} className={""}>
              {p.map((s) => s)}
            </p>
          ))}
        </div>
      </div>
    );
  }

  if (variant === "referenced") {
    return (
      <div
        className={
          "pl-2 pr-2.5 py-1.5 text-[13px] bg-white/30 border-l-4 border-t-white/60 rounded"
        }
      >
        <p>
          {message.from?.photo?.thumb && (
            <img
              src={message.from.photo.thumb}
              alt=""
              referrerPolicy="no-referrer"
              className={"inline-block align-sub mr-0.5 w-4 h-4 rounded-sm"}
            />
          )}
          {/* TODO */}
          {message.from?.remark ?? message.from?.username ?? "USER"}:
          {message.message_entity as string}
        </p>
      </div>
    );
  }
}
